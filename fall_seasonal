select * from ua_pos_prod_sku sku where 
dept_idnt='26'
rownum <55

select
dtl.pos_trans_key,
sum(dtl.extended_sls_amt) as sales,
case when sku.dept_idnt = '26' then sum(dtl.extended_sls_amt)

select
(case when stre.indiv_id= ecom.indiv_id then stre.indiv_id else coalesce(stre.indiv_id, ecom.indiv_id) end)                                     as indiv_id,
sum((coalesce(stre.store_trans,0))+ (coalesce(ecom.ecom_trans, 0)))                                                                             as timeframe_trans,
sum((coalesce(stre.store_sales,0))+ (coalesce(ecom.ecom_sales, 0)))                                                                             as timeframe_sales,
sum((coalesce(stre.store_units,0))+ (coalesce(ecom.ecom_units, 0)))                                                                             as timeframe_units,
sum(stre.store_gm)                                                                                                                              as store_gm,
sum(stre.store_sales)                                                                                                                           as store_sales,
(case when stre.indiv_id= ecom.indiv_id then 'omni' when stre.indiv_id >0 then 'store only' when ecom.indiv_id >0 then 'ecom only' end)         as channel
from (select
          dtl.indiv_id,
          count(distinct dtl.pos_trans_key)                       as store_trans,
          sum(dtl.extended_sls_amt)                               as store_sales,
          sum(dtl.grs_mrgn_amt)                                   as store_gm,
          sum(dtl.qty)                                            as store_units
         from         ua_pos_trans_dtl dtl
         inner join ua_store str on dtl.loc_key = str.loc_key
         inner join ua_pos_prod_sku sku         on dtl.sku_key = sku.sku_key
         where dtl.wk_idnt between &start_wk_idnt and &end_wk_idnt and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
        group by dtl.indiv_id) stre
    full outer join(
    select
        ecom.indiv_id,
        count(distinct ecom.order_id)                           as ecom_trans,
        sum(ecom.flfll_net_ttl_amt)                             as ecom_sales,
        sum(ecom.flfll_unit_cnt)                                as ecom_units
        from ua_ecom_order_dtl   ecom
        inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
        inner join ua_pos_prod_sku sku on ecom.sku_name = sku.sku_idnt
        where tm.wk_idnt between &start_wk_idnt and &end_wk_idnt
        group by ecom.indiv_id) ecom on stre.indiv_id = ecom.indiv_id
group by stre.indiv_id, ecom.indiv_id;

select
coalesce(stre.seasonal_vs_sba, ecom.seasonal_vs_sba)                                                                                            as seasonal_vs_sba,
sum((coalesce(stre.seasonal_vs_sba_sales,0))+ (coalesce(ecom.seasonal_vs_sba_sales, 0)))                                                        as seasonal_vs_sba_sales,
count(distinct(case when stre.indiv_id= ecom.indiv_id then stre.indiv_id else coalesce(stre.indiv_id, ecom.indiv_id) end)    )                  as customers,
sum((coalesce(stre.store_trans,0))+ (coalesce(ecom.ecom_trans, 0)))                                                                             as timeframe_trans,
sum((coalesce(stre.store_sales,0))+ (coalesce(ecom.ecom_sales, 0)))                                                                             as timeframe_sales,
sum((coalesce(stre.store_units,0))+ (coalesce(ecom.ecom_units, 0)))                                                                             as timeframe_units,
sum(stre.store_gm)                                                                                                                              as store_gm,
sum(stre.store_sales)                                                                                                                           as store_sales
from (

drop table fall_seasonal_transactions
create table fall_seasonal_transactions as
select
distinct
stre.pos_trans_key, 
ecom.order_id,
sum(stre.fall_store_sales) as fall_store_sales,
sum(ecom.fall_ecom_sales) as fall_ecom_sales
from(
select dtl.pos_Trans_key, 
sum(dtl.extended_sls_amt) as fall_store_sales
from ua_pos_trans_dtl dtl inner join ua_pos_prod_sku sku on dtl.sku_key = sku.sku_key and sku.dept_idnt = '26' where dtl.wk_idnt between 201727 and 201743 group by dtl.pos_trans_key)stre
full outer join 
(select ecom.order_id,
sum(ecom.flfll_net_ttl_amt) as fall_ecom_sales
from ua_ecom_order_dtl ecom inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt) inner join ua_pos_prod_sku sku on ecom.sku_name = sku.sku_idnt where tm.wk_idnt between 201727 and 201743 and sku.dept_idnt = '26'  group by ecom.order_id)
ecom on ecom.order_id = stre.pos_trans_key
group by stre.pos_Trans_key, ecom.order_id;

create table fall_seasonal_transactions_priority as
select
distinct
stre.pos_trans_key, 
ecom.order_id,
sum(stre.non_fall_store_sales) as non_fall_store_sales,
sum(ecom.non_fall_ecom_sales) as non_fall_ecom_sales
from(
select dtl.pos_Trans_key, 
sum(dtl.extended_sls_amt) as non_fall_store_sales
from ua_pos_trans_dtl dtl inner join ua_pos_prod_sku sku on dtl.sku_key = sku.sku_key and sku.dept_idnt != '26' where dtl.wk_idnt between 201727 and 201743 group by dtl.pos_trans_key)stre
full outer join 
(select ecom.order_id,
sum(ecom.flfll_net_ttl_amt) as non_fall_ecom_sales
from ua_ecom_order_dtl ecom inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt) inner join ua_pos_prod_sku sku on ecom.sku_name = sku.sku_idnt where tm.wk_idnt between 201727 and 201743 and sku.dept_idnt != '26' group by ecom.order_id)
ecom on ecom.order_id = stre.pos_trans_key
left join fall_seasonal_transactions fst on ecom.order_id = fst.order_id  and ecom.non_fall_ecom_sales < fst.fall_ecom_sales
left join fall_seasonal_transactions fst_2 on stre.pos_trans_key = fst_2.pos_trans_key and  stre.non_fall_store_sales < fst_2.fall_store_sales 
group by stre.pos_Trans_key, ecom.order_id;



     
Create table fall_seasonal_percent as
select
coalesce(stre.pos_Trans_key, ecom.order_id)               as  trans, 
coalesce(stre.indiv_id, ecom.indiv_id)                    as  indiv_id, 
sum(stre.seasonal_vs_sba_sales)                           as seasonal_vs_sba_sales,
coalesce(stre.seasonal_vs_sba, ecom.seasonal_vs_sba)      as seasonal_vs_sba
from(
select
          dtl.indiv_id,
          sku.dept_idnt,
          (case when sku.dept_idnt = '26'  then sum(dtl.extended_sls_amt)
          when sku.dept_idnt !='26' then sum(dtl.extended_sls_amt) else null end) as seasonal_vs_sba_sales,
          (case when sku.dept_idnt = '26'  then 'fall_seasonal'
          when sku.dept_idnt !='26' then 'sba' else null end) as seasonal_vs_sba,
          dtl.pos_trans_key,
          sum(dtl.extended_sls_amt)                               as store_sales,
          sum(dtl.grs_mrgn_amt)                                   as store_gm,
          sum(dtl.qty)                                            as store_units
         from         ua_pos_trans_dtl dtl
         inner join ua_store str on dtl.loc_key = str.loc_key
         inner join ua_pos_prod_sku sku         on dtl.sku_key = sku.sku_key
         inner join fall_seasonal_transactions fst on fst.pos_trans_key = dtl.pos_trans_key
         where dtl.wk_idnt between 201727 and 201743 and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
        group by dtl.indiv_id, sku.dept_idnt, dtl.pos_trans_key,) stre
    full outer join(
    select
        ecom.indiv_id,
        sku.dept_idnt,
         (case when sku.dept_idnt = '26'  then sum(ecom.flfll_net_ttl_amt)
          when sku.dept_idnt !='26' then sum(ecom.flfll_net_ttl_amt) else null end) as seasonal_vs_sba_sales,
          (case when sku.dept_idnt = '26'  then 'fall_seasonal'
          when sku.dept_idnt !='26' then 'sba' else null end)   as seasonal_vs_sba,
        ecom.order_id                                           as order_id,
        sum(ecom.flfll_net_ttl_amt)                             as ecom_sales,
        sum(ecom.flfll_unit_cnt)                                as ecom_units
        from ua_ecom_order_dtl   ecom
        inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
        inner join ua_pos_prod_sku sku on ecom.sku_name = sku.sku_idnt
        inner join fall_seasonal_transactions fst on fst.order_id = ecom.order_id
        where tm.wk_idnt between 201727 and 201743
        group by ecom.indiv_id, sku.dept_idnt, ecom.order_id) ecom on stre.pos_trans_key = ecom.order_id
group by seasonal_vs_sba;
